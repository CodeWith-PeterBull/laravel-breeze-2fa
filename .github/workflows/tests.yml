name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.1, 8.2, 8.3]
        laravel: [10.*, 11.*, 12.*]
        dependency-version: [prefer-stable]
        include:
          - laravel: 10.*
            testbench: 8.*
          - laravel: 11.*
            testbench: 9.*
          - laravel: 12.*
            testbench: 10.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, openssl
          coverage: xdebug

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover

      - name: Upload coverage to Codecov
        if: matrix.php == '8.2' && matrix.laravel == '11.*'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.clover
          fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest
    
    name: Code Quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, openssl
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Check code style
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --verbose

      - name: Run static analysis
        run: vendor/bin/phpstan analyse --error-format=github

  security:
    runs-on: ubuntu-latest
    
    name: Security Scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, openssl
          coverage: none

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Run security checker
        run: |
          composer audit
          
      - name: Check for known vulnerabilities
        run: |
          if [ -f composer.lock ]; then
            curl -H "Accept: text/plain" https://security.symfony.com/check_lock -F lock=@composer.lock
          fi 